import java.util.Arrays;

public class Graph {

    public static void main(String[] args) {
        int n = 8; // Количество вершин графа

        /** Строим матрицу смежности графа и указываем длину всех дуг**/
        int[][] L = new int[][]{
                {0, 20, 35, 0,  0,  0,  0,  0},   // из Истоковой вершины 0
                {0, 0,  0,  55, 0,  0,  0,  0},    // из вершины 1
                {0, 0,  0,  0,  70, 0,  0,  0},    // из вершины 2
                {0, 0,  0,  0,  0,  60, 0,  0},    // из вершины 4
                {0, 0,  0,  0,  0,  0,  100,0},    // из вершины 5
                {0, 0,  0,  0,  0,  0,  0,  80},   // из вершины 6
                {0, 0,  0,  0,  0,  0,  0,  30},   // из вершины 7
                {0, 0,  0,  0,  0,  0,  0,  0}     // Стоковая вершина
        };

        /** Wj = Wk + xk - lkj * g, где
         *  Wk - начальное количество топлива в баке в начале маршрута из точки k в точку j;
         *  xk - количество заправленного топлива в точке `k`
         *  lkj - длина участка (k, j) ∈ E;
         *  g – удельный расход топлива;
         *  Wj - количество полученного топлива в точке j.
         **/

        double Wj;
        int[] xk =  {5, 1, 2, 5, 3, 10, 10, 0};
        double[][] Wk = new double[10][10]; // Количество полученн
        double g = 0.01; // средний расход на 1 км, если 10л на 100км

        for (int j = 1; j < n; j++) {
            for (int i = 0; i < n; i++) {
                if (L[i][j] > 0) {
                    if (i == 0) {
                        Wj = 0 + xk[i] - L[i][j] * 0.01 * g;
                        System.out.println(Wj + " = " + xk[i] + " - " + L[i][j] + " * 0.07 " + " Из точки " + i + " в точку " + j + " с расстоянием " + L[i][j]);
                        Wk[j][j] = Wj;
                    } else {
                        Wj = Wk[i][i] + xk[i] - L[i][j] * 0.01 * g;
                        System.out.println(Wj + " = " + Wk[i][i] + " + " + xk[i] + " - " + L[i][j] + " * 0.07 " + " Из точки " + i + " в точку " + j + " с расстоянием " + L[i][j]);
                        Wk[j][j] = Wj;
                    }
                }
            }
        }
    }
}